name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run typecheck

      - name: Lint
        run: pnpm run lint

      - name: Run unit tests
        run: pnpm run test

  build:
    name: Build & Bundle Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build
        env:
          NEXT_PUBLIC_FEATURE_HERO: '1'
          NEXT_PUBLIC_FEATURE_PETALS_INTERACTIVE: '1'
          NEXT_PUBLIC_FEATURE_SHOP: '1'
          NEXT_PUBLIC_FEATURE_MINIGAMES: '1'
          NEXT_PUBLIC_FEATURE_BLOG: '1'
          NEXT_PUBLIC_FEATURE_SOAPSTONES: '1'
          NEXT_PUBLIC_LIVE_DATA: '0'
          NEXT_PUBLIC_PROBE_MODE: '1'

      - name: Analyze bundle size
        run: |
          pnpm run build -- --analyze
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: .next/
          retention-days: 1

  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: .next/

      - name: Start Next.js server
        run: |
          pnpm run start &
          sleep 30
        env:
          PORT: 3000
          NEXT_PUBLIC_FEATURE_HERO: '1'
          NEXT_PUBLIC_FEATURE_PETALS_INTERACTIVE: '1'
          NEXT_PUBLIC_FEATURE_SHOP: '1'
          NEXT_PUBLIC_FEATURE_MINIGAMES: '1'
          NEXT_PUBLIC_FEATURE_BLOG: '1'
          NEXT_PUBLIC_FEATURE_SOAPSTONES: '1'
          NEXT_PUBLIC_LIVE_DATA: '0'
          NEXT_PUBLIC_PROBE_MODE: '1'

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouserc.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: .next/

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Start Next.js server
        run: |
          pnpm run start &
          sleep 30
        env:
          PORT: 3000
          NEXT_PUBLIC_FEATURE_HERO: '1'
          NEXT_PUBLIC_FEATURE_PETALS_INTERACTIVE: '1'
          NEXT_PUBLIC_FEATURE_SHOP: '1'
          NEXT_PUBLIC_FEATURE_MINIGAMES: '1'
          NEXT_PUBLIC_FEATURE_BLOG: '1'
          NEXT_PUBLIC_FEATURE_SOAPSTONES: '1'
          NEXT_PUBLIC_LIVE_DATA: '0'
          NEXT_PUBLIC_PROBE_MODE: '1'

      - name: Run Playwright tests
        run: pnpm exec playwright test
        env:
          BASE_URL: http://localhost:3000

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Run dependency check
        run: pnpm run check-deps
        continue-on-error: true
